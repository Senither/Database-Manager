Database Manager:
  ✔ Add a *queryUpdate* method that access the custom connection name value. @done (12/06/16 17:00)

  ✔ Add a *queryInsert* method that allows user to do the same as *queryUpdate*, but instead it will return a Set<Integer> object, where each index reprecent a ID value of the row that was inserted. @done (12/06/16 17:08)
    ✔ Checks should be made to make sure the parsed query is actually a INSERT query, if that's not the case a *DatabaseException* should be thrown. @done (12/06/16 17:08)

Database Factory:
  ✔ Add a *PluginContainer* class where all plugin info should be stored for any plugin that has created an instance of DBM. @done (12/06/16 17:43)
    ✔ If a plugin requests to create a new DBM instance, but a PluginContainer instance was already found, return the existing instance instead. @done (12/06/16 17:43)
    ✔ Create a dynamic lookup on the main instance of the plugin description, allowing us to create a dynamic search that would allow us to remove the DBM instance from Eloquent and the Query Builder, making the database connection random. @done (12/06/16 23:37)

Query Builder:
  The followin methods should be created and added under the "Ordering, Grouping, Limit, & Offset" in the wiki, 
  information about the methods can be found here: https://laravel.com/docs/5.2/queries#ordering-grouping-limit-and-offset
    ✔ inRandomOrder @done (12/06/16 16:34)
    ☐ having
    ☐ havingRaw
    ✔ skip  @done (12/06/16 16:51)
    ✔ take @done (12/06/16 16:51)

  ☐ Create a Conditional Statements when method, allowing the user to parse it their own logic for a when statement.
    Information can be found here https://laravel.com/docs/5.2/queries#conditional-statements
      ☐ Create a *QueryWhenStatement* interface the when method should have as a parmater, with one method for handeling the logic.

  ☐ Create a *QueryWhereStatement* interface that allows users to parse is logic to create an advanced where statement.
    Information can be found here https://laravel.com/docs/5.2/queries#advanced-where-clauses

Schematics(Schema):
  ✔ Fix the *defautValue* on the field class for booleans, parsing in a raw boolean seems to throw exceptions, so a SQL Action object should be used instead. @done (12/06/16 16:06)

  ☐ Add a *updateTable* method which will function the same way as the *createTable* method, however it will just update a existing table instead of making a new one.
    ☐ An *AlterGrammar* grammar class should be created in order to format update table information.

Carbon:
  ✔ Implement more output methods for different known datetime types. @done (12/06/16 15:48)
    ✔ toDateString:                | 1975-12-25 @done (12/06/16 14:15)
    ✔ toFormattedDateString        | Dec 25, 1975 @done (12/06/16 14:23)
    ✔ toTimeString                 | 14:15:16 @done (12/06/16 14:24)
    ✔ toDateTimeString             | 1975-12-25 14:15:16 @done (12/06/16 14:26)
    ✔ toDayDateTimeString          | Thu, Dec 25, 1975 2:15 PM @done (12/06/16 14:29)
    ✔ toAtomString                 | 1975-12-25T14:15:16-05:00 @done (12/06/16 14:44)
    ✔ toCookieString               | Thursday, 25-Dec-1975 14:15:16 EST @done (12/06/16 14:52)
    ✔ toIso8601String              | 1975-12-25T14:15:16-0500 @done (12/06/16 14:54)
    ✔ toRfc822String               | Thu, 25 Dec 75 14:15:16 -0500 @done (12/06/16 14:59)
    ✔ toRfc850String               | Thursday, 25-Dec-75 14:15:16 EST @done (12/06/16 15:02)
    ✔ toRfc1036String              | Thu, 25 Dec 75 14:15:16 -0500 @done (12/06/16 15:05)
    ✘ toRfc1123String              | Thu, 25 Dec 1975 14:15:16 -0500 @cancelled (12/06/16 15:09)
    ✘ toRfc2822String              | Thu, 25 Dec 1975 14:15:16 -0500 @cancelled (12/06/16 15:09)
    ✔ toRfc3339String              | 1975-12-25T14:15:16-05:00 @done (12/06/16 15:11)
    ✔ toRssString                  | Thu, 25 Dec 1975 14:15:16 -0500 @done (12/06/16 15:17)
    ✔ toW3cString                  | 1975-12-25T14:15:16-05:00 @done (12/06/16 15:48)

  ✔ Implement a *format* method, allowing the user to parse in their own datetime string that should be generated. @done (12/06/16 14:15)

Collection:
  ✔ Fix the DatabaseException thrown in the *getStrings* method so it just returns NULL if nothing is found with the provided key. @done (13/06/16 15:53)
      This was fixed by removing them compeltely since the methods wasen't actually needed anyway.

  ✔ Create a way to make a new *Collection* instance without having to parse in a ResultSet, for example having the keys as the first paramater, and the items as the second. @done (13/06/16 15:53)

  ✔ Implement more *Collection* methods, allowing users to do more things with the collection method itself. @done (13/06/16 15:53)
    Information for all of the methods can be found here: https://laravel.com/docs/5.2/collections#available-methods
    Note that some of the methods might not actually be usless in a Java case, so some might have to be removed.
      ✔ avg @done (13/06/16 04:08)
      ✔ chunk @done (13/06/16 15:50)
      ✘ collapse @cancelled (13/06/16 15:50)
      ✘ combine @cancelled (13/06/16 15:50)
      ✘ contains @cancelled (13/06/16 15:51)
      ✔ size @done (13/06/16 15:52)
      ✘ diff @cancelled (13/06/16 15:52)
      ✘ diffKeys @cancelled (13/06/16 15:52)
      ✘ each @cancelled (13/06/16 15:52)
      ✘ every @cancelled (13/06/16 15:52)
      ✘ except @cancelled (13/06/16 15:52)
      ✘ filter @cancelled (13/06/16 15:52)
      ✘ flip @cancelled (13/06/16 15:52)
      ✘ forget @cancelled (13/06/16 15:52)
      ✘ groupBy @cancelled (13/06/16 15:52)
      ✔ has @done (13/06/16 15:52)
      ✘ implode @cancelled (13/06/16 15:52)
      ✘ intersect @cancelled (13/06/16 15:52)
      ✔ isEmpty @done (13/06/16 04:03)
      ✘ keyBy @cancelled (13/06/16 15:52)
      ✔ keys @done (13/06/16 15:52)
      ✔ last @done (13/06/16 15:52)
      ✘ map @cancelled (13/06/16 15:52)
      ✔ max @done (13/06/16 15:52)
      ✘ merge @cancelled (13/06/16 15:52)
      ✔ min @done (13/06/16 15:52)
      ✘ only @cancelled (13/06/16 15:52)
      ✘ pluck @cancelled (13/06/16 15:52)
      ✔ pop @done (13/06/16 15:52)
      ✘ prepend @cancelled (13/06/16 15:52)
      ✘ pull @cancelled (13/06/16 15:52)
      ✘ push @cancelled (13/06/16 15:52)
      ✘ put @cancelled (13/06/16 15:52)
      ✔ random @done (13/06/16 15:52)
      ✘ reduce @cancelled (13/06/16 15:52)
      ✘ reject @cancelled (13/06/16 15:52)
      ✔ reverse @done (13/06/16 15:52)
      ✘ search @cancelled (13/06/16 15:52)
      ✘ shift @cancelled (13/06/16 15:52)
      ✘ shuffle @cancelled (13/06/16 15:52)
      ✘ slice @cancelled (13/06/16 15:52)
      ✘ sort @cancelled (13/06/16 15:52)
      ✘ sortBy @cancelled (13/06/16 15:52)
      ✘ sortByDesc @cancelled (13/06/16 15:52)
      ✘ splice @cancelled (13/06/16 15:52)
      ✔ sum @done (13/06/16 15:52)
      ✘ take @cancelled (13/06/16 15:52)
      ✘ toArray @cancelled (13/06/16 15:52)
      ✔ toJson @done (13/06/16 15:52)
      ✘ transform @cancelled (13/06/16 15:53)
      ✘ union @cancelled (13/06/16 15:53)
      ✘ unique @cancelled (13/06/16 15:53)
      ✘ values @cancelled (13/06/16 15:53)
      ✔ where @done (13/06/16 15:53)
      ✔ whereLoose @done (13/06/16 15:53)
      ✘ WhereIn @cancelled (13/06/16 15:53)
      ✘ whereInLoose @cancelled (13/06/16 15:53)
      ✘ zip @cancelled (13/06/16 15:53)